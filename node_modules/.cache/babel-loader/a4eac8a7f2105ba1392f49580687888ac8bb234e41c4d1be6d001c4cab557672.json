{"ast":null,"code":"var _jsxFileName = \"/Users/seancurran/dev/tidal-tracker-as_react/src/components/NowPlaying.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NowPlaying() {\n  _s();\n  const [trackInfo, setTrackInfo] = useState({\n    title: '',\n    artist: '',\n    album: '',\n    artworkUrl: '',\n    isPlaying: false,\n    error: null\n  });\n  useEffect(() => {\n    const fetchNowPlaying = async () => {\n      try {\n        const response = await fetch('/now-playing');\n        const data = await response.json();\n        if (data.error) {\n          setTrackInfo({\n            title: '',\n            artist: '',\n            album: '',\n            artworkUrl: '',\n            isPlaying: false,\n            error: data.error\n          });\n        } else {\n          setTrackInfo({\n            ...data,\n            isPlaying: true,\n            error: null\n          });\n        }\n      } catch (error) {\n        setTrackInfo({\n          title: '',\n          artist: '',\n          album: '',\n          artworkUrl: '',\n          isPlaying: false,\n          error: 'Failed to fetch track information'\n        });\n      }\n    };\n\n    // Initial fetch\n    fetchNowPlaying();\n\n    // Poll every 10 seconds\n    const intervalId = setInterval(fetchNowPlaying, 10000);\n\n    // Cleanup interval on unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  if (!trackInfo.isPlaying) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: trackInfo.error || 'No track currently playing'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"now-playing\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image-art\",\n        src: trackInfo.artworkUrl,\n        alt: `${trackInfo.album} album art`,\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-title\",\n          children: trackInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist\",\n          children: trackInfo.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), trackInfo.artworkUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: trackInfo.artworkUrl,\n      alt: `${trackInfo.album} album art`,\n      style: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: trackInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: trackInfo.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(NowPlaying, \"FcNEMLYhEOxPNsnfgZ0/eeUXmbo=\");\n_c = NowPlaying;\nexport default NowPlaying;\nvar _c;\n$RefreshReg$(_c, \"NowPlaying\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NowPlaying","_s","trackInfo","setTrackInfo","title","artist","album","artworkUrl","isPlaying","error","fetchNowPlaying","response","fetch","data","json","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","style","_c","$RefreshReg$"],"sources":["/Users/seancurran/dev/tidal-tracker-as_react/src/components/NowPlaying.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction NowPlaying() {\n    const [trackInfo, setTrackInfo] = useState({\n        title: '',\n        artist: '',\n        album: '',\n        artworkUrl: '',\n        isPlaying: false,\n        error: null\n    });\n\n    useEffect(() => {\n        const fetchNowPlaying = async () => {\n            try {\n                const response = await fetch('/now-playing');\n                const data = await response.json();\n\n                if (data.error) {\n                    setTrackInfo({\n                        title: '',\n                        artist: '',\n                        album: '',\n                        artworkUrl: '',\n                        isPlaying: false,\n                        error: data.error\n                    });\n                } else {\n                    setTrackInfo({\n                        ...data,\n                        isPlaying: true,\n                        error: null\n                    });\n                }\n            } catch (error) {\n                setTrackInfo({\n                    title: '',\n                    artist: '',\n                    album: '',\n                    artworkUrl: '',\n                    isPlaying: false,\n                    error: 'Failed to fetch track information'\n                });\n            }\n        };\n\n        // Initial fetch\n        fetchNowPlaying();\n\n        // Poll every 10 seconds\n        const intervalId = setInterval(fetchNowPlaying, 10000);\n\n        // Cleanup interval on unmount\n        return () => clearInterval(intervalId);\n    }, []);\n\n    if (!trackInfo.isPlaying) {\n        return (\n            <div>\n                <h1>Now Playing</h1>\n                <p>{trackInfo.error || 'No track currently playing'}</p>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"now-playing\">\n                <img\n                    className=\"image-art\"\n                    src={trackInfo.artworkUrl}\n                    alt={`${trackInfo.album} album art`}\n                    style={{}}\n                />\n                <div className=\"image-text\">\n                    <div className=\"song-title\">{trackInfo.title}</div>\n                    <div className=\"artist\">{trackInfo.artist}</div>\n                </div>\n            </div>\n            <h1>Now Playing</h1>\n            {trackInfo.artworkUrl && (\n                <img\n                    src={trackInfo.artworkUrl}\n                    alt={`${trackInfo.album} album art`}\n                    style={{}}\n                />\n            )}\n            <h2>{trackInfo.title}</h2>\n            <p>{trackInfo.artist}</p>\n        </div>\n    );\n}\n\nexport default NowPlaying;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}